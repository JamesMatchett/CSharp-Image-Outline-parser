using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Drawing;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {


            string path = (@"C:\Users\DevUser\Downloads\image.jpg");
            

            //make a new bitmap based on the image path input
            Bitmap img = new Bitmap(path);

            //make a multidimensional string array that uses the mininum memory possible
            string[, ,] pixelarray = new string[img.Width, img.Height, 3];

            Console.WriteLine("Image found and contains " + (img.Height * img.Width) + " Pixels");
            Console.WriteLine(img.Width + (" pixels wide and ") + img.Height + (" pixels tall"));
            Console.WriteLine("Press enter to begin");
            Console.ReadKey();
            int total = (img.Height * img.Width);


            for (int i = 0; i < img.Width; i++)
            {
                for (int j = 0; j < img.Height; j++)
                {
                    Color pixel = img.GetPixel(i, j);



                    //Console.WriteLine(progress + "% done");

                    Console.WriteLine("on pixel " + ((img.Height * i) + j) +" of "+total);


                    //add to array with coords
                    //array format will be Height, width, alpha, r ,g, b,

                    pixelarray[i, j, 0] = Convert.ToString(pixel.R);
                    pixelarray[i, j, 1] = Convert.ToString(pixel.G);
                    pixelarray[i, j, 2] = Convert.ToString(pixel.B);

                    //verification outputs
                    /*
                                        Console.WriteLine("At width " + i + " and height " + j + " there is an alpha of " + pixelarray[i, j, 0]);
                                        Console.WriteLine("A red of " + pixelarray[i, j, 1]);
                                        Console.WriteLine("A blue of " + pixelarray[i, j, 2]);
                                        Console.WriteLine("a green of " + pixelarray[i, j, 3]);
                                        Console.WriteLine("");

                     * */




                }

            }

            Console.WriteLine("");
            Console.WriteLine("Processing done");
            Console.WriteLine("Enter 1. to save, Enter 2. to not");
            int choice = Convert.ToInt32(Console.ReadLine());

            if (choice == 1)
            {

                try
                {

                    //Pass the filepath and filename to the StreamWriter Constructor
                    StreamWriter sw = new StreamWriter(@"C:\Users\DevUser\Downloads\output.txt");

                    //Write a line of text
                    for (int i = 0; i < img.Width; i++)
                    {
                        for (int j = 0; j < img.Height; j++)
                        {
                         sw.WriteLine( Convert.ToString(i) + (" ") + Convert.ToString(j) + " "+ pixelarray[i, j, 0] +(" ") +pixelarray[i, j, 1]+(" ") + pixelarray[i, j, 2]);

                        }

                    }


                       

                   

                    //Close the file
                    sw.Close();
                }
                catch (Exception e)
                {
                    Console.WriteLine("Exception: " + e.Message);
                }
                finally
                {
                    Console.WriteLine("File was saved successfully.");
                }

            }


            for (int i = 0; i < img.Width; i++)
            {
                for (int j = 0; j < img.Height; j++)
                {
                    if (Math.Abs(Convert.ToInt32(pixelarray[i,j,0]) - Convert.ToInt32(pixelarray[i-1, j + 1, 0])) > 84.15){
                        //add to second array
                    }


            //now add in the analytics, the text file above was purely for backup, look for a large change in color value in adjacent
            //pixels and plot as a point of contrast, if value differs my 33% add it as a point of contrast.



            Console.ReadKey();




        }
    }
}
